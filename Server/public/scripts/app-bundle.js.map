{"version":3,"sources":["src/app.js","src/auth-config.js","src/environment.js","src/main.js","src/modules/home.js","src/modules/list.js","src/resources/index.js","src/resources/data/data-services.js","src/resources/data/mypics.js","src/resources/data/photos.js","src/resources/data/users.js","src/resources/elements/flatpickr.js","src/resources/value-converters/completed.js","src/resources/value-converters/date-format.js"],"names":["App","configureRouter","config","router","addPipelineStep","map","route","moduleId","name","authConfig","baseUrl","loginUrl","tokenName","authHeader","authToken","logoutRedirect","debug","testing","configure","window","regeneratorRuntime","aurelia","use","standardConfiguration","plugin","baseConfig","feature","developmentLogging","start","then","setRoot","Home","users","auth","loginError","message","showLogin","showRegister","user","firstName","lastName","email","password","registerError","save","console","log","serverResponse","error","login","sessionStorage","setItem","JSON","stringify","response","navigate","catch","List","mypics","photos","parse","getItem","showList","activate","getUserMypics","_id","createMypic","mypicObj","description","dateCreated","Date","userId","createPhotos","Id","selectedphoto","editMypic","mypic","editPhotos","deleteMypic","deletePhotos","deletePhoto","changeFiles","filesToUpload","Array","push","files","removeFile","index","splice","saveMypic","alert","mypicId","length","uploadFile","savePhotos","showPhotos","getPhotos","back","backPhotos","logout","removeItem","globalResources","DataServices","http","httpClient","BASE_URL","withBaseUrl","withDefaults","credentials","headers","withInterceptor","request","localStorage","append","method","url","status","get","fetch","json","data","post","content","body","object","put","delete","uploadFiles","MyPics","MYPIC_SERVICE","mypicsArray","id","i","formData","FormData","forEach","item","Photos","PHOTO_SERVICE","photoArray","getUserPhoto","photo","photoId","Users","USER_SERVICE","FlatPickerCustomElement","Element","defaultBindingMode","twoWay","element","bind","defaultConfig","altInput","altFormat","wrap","_config","Object","assign","onChange","onMonthChange","onYearChange","attached","flatpickr","querySelector","selectedDates","dateStr","instance","value","valueChanged","newDate","undefined","setDate","CompletedValueConverter","toView","array","filter","completed","DateFormatValueConverter","format"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {AuthorizeStep} from 'aurelia-auth';\n\nexport class App {\n  \n  configureRouter(config, router) {\n    this.router = router;\n    config.addPipelineStep('authorize', AuthorizeStep); \n    config.map([\n\n      { \n\troute: ['', 'home'],\n\t moduleId: './modules/home',\n\t name: 'Home' \n      },\n\n      {\n\t route: 'list',\n\t moduleId: './modules/list',\n\t name: 'List' \n     }\n    ]);\n  }\n}\n\n","var authConfig = {\r\n    baseUrl: \"http://localhost:5000/api\",\r\n    loginUrl: '/users/login',\r\n    tokenName: 'token',\r\n    authHeader: 'Authorization',\r\n    authToken: '',\r\n    logoutRedirect: '#/home'\r\n  }\r\n  \r\n  export default authConfig;\r\n  ","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\nimport config from './auth-config';\nimport regeneratorRuntime from 'regenerator-runtime';\nwindow.regeneratorRuntime = regeneratorRuntime;\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .plugin('aurelia-auth', (baseConfig)=>{\n      baseConfig.configure(config);\n    })\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","    import {inject} from 'aurelia-framework';\r\n    import {Router} from 'aurelia-router';\r\n    import { Users } from '../resources/data/users';    \r\n    import {AuthService} from 'aurelia-auth';  \r\n    \r\n    @inject(Router,Users,AuthService)\r\n    export class Home {\r\n\r\n      constructor(router,users,auth) {\r\n        this.router = router;\r\n        this.auth = auth;\r\n        this.loginError = '';     \r\n        this.users = users;        \r\n        this.message = 'Home';\r\n        this.showLogin = true;        \r\n      }\r\n    \r\n      showRegister(){\r\n        this.user = {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            email: \"\",\r\n            password: \"\"\r\n            }\r\n            this.registerError = \"\";\r\n            \r\n        this.showLogin = false;\r\n    }\r\n      async save() {\r\n        console.log (this.user);\r\n              let serverResponse = await this.users.save(this.user);\r\n              if (!serverResponse.error) {\r\n                this.showLogin = true;\r\n              } else {\r\n                this.registerError = \"There was a problem registering the user.\"\r\n              }\r\n        }        \r\n        \r\n    login(){\r\n        return this.auth.login(this.email, this.password)\r\n        .then(response => {\r\n        sessionStorage.setItem(\"user\", JSON.stringify(response.user));\r\n        this.loginError = \"\";  \r\n        this.router.navigate('list');\r\n     })\r\n        .catch(error => {\r\n         console.log(error);\r\n         this.loginError = \"Invalid credentials.\";\r\n   });\r\n};\r\n\r\n }\r\n","    import {inject} from 'aurelia-framework';\r\n    import {Router} from 'aurelia-router';\r\n    import {MyPics} from '../resources/data/mypics';   \r\n    import {Photos} from '../resources/data/photos';  \r\n    import { AuthService } from 'aurelia-auth';    \r\n    \r\n    @inject(Router, AuthService, MyPics, Photos)\r\n    export class List {\r\n\r\n      constructor(router,auth,mypics, photos) {\r\n        this.router = router;\r\n        this.mypics = mypics;\r\n        this.photos = photos;\r\n        this.auth = auth;\r\n        this.message ='List';\r\n        this.user = JSON.parse(sessionStorage.getItem('user'));\r\n        // this.title = \"My Pictures\"\r\n        // this.priorities = ['Low', 'Medium', 'High', 'Critical'];\r\n        this.showList = 'mypicList';\r\n        // this.showCompleted = false;\r\n\r\n      }\r\n\r\n      async activate(){\r\n        await this.mypics.getUserMypics(this.user._id);\r\n    }\r\n\r\n    createMypic(){   \r\n        this.mypicObj = {\r\n            mypics: \"\",\r\n            description: \"\",\r\n            dateCreated: new Date(),\r\n            userId: this.user._id,\r\n            // priority: this.priorities[0]\r\n        }\r\n        // this.showList = false;      \r\n        this.showList = 'mypicForm'; \r\n    }\r\n\r\n    createPhotos (){\r\n        this.mypicObj ={\r\n            userId: this.user._id,\r\n            Id: this.selectedphoto\r\n        }\r\n        this.showList = 'photosForm';\r\n    }\r\n\r\n    editMypic(mypic){\r\n                this.mypicObj = mypic;\r\n                // this. showList = false;\r\n                this. showList = 'mypicForm';\r\n            }\r\n\r\n    editPhotos(mypic){\r\n        this.mypicObj = mypic;\r\n        this.showList = 'photosForm';\r\n    }        \r\n\r\n    deleteMypic(mypic){\r\n                this.mypics.deleteMypic(mypic._id);\r\n            }\r\n\r\n            deletePhotos(mypic){\r\n                this.photos.deletePhoto(mypic._id);\r\n            }\r\n\r\n        // completeMypic(mypic){\r\n        //         mypic.completed = !mypic.completed;\r\n        //         this.mypicObj = mypic;\r\n        //         this.saveMypic();\r\n        //     }\r\n\r\n        //  toggleShowCompleted(){\r\n        //         this.showCompleted = !this.showCompleted;\r\n        //     }\r\n          \r\n        changeFiles(){\r\n                  this.filesToUpload = new Array(); \r\n                  this.filesToUpload.push(this.files[0]);\r\n                }\r\n        \r\n        removeFile(index){\r\n                    this.filesToUpload.splice(index,1);\r\n                }\r\n                   \r\n\r\n    async saveMypic(){\r\n        if(this.mypicObj){       \r\n            let response = await this.mypics.save(this.mypicObj);\r\n            if(response.error){\r\n                alert(\"There was an error creating the MyPics\");\r\n            } else {\r\n                  var mypicId = response._id;\r\n                                if(this.filesToUpload && this.filesToUpload.length){\r\n                                    await this.mypics.uploadFile(this.filesToUpload, this.user._id, mypicId);\r\n                                    this.filesToUpload = [];\r\n                                }                     \r\n            }\r\n            this.showList = 'mypicList';\r\n        }\r\n    }\r\n\r\n    async savePhotos(){\r\n        if(this.mypicObj){       \r\n            let response = await this.photos.save(this.mypicObj);\r\n            if(response.error){\r\n                alert(\"There was an error creating the MyPics\");\r\n            } else {\r\n                  var mypicId = response._id;\r\n                                if(this.filesToUpload && this.filesToUpload.length){\r\n                                    await this.photos.uploadFile(this.filesToUpload, this.user._id, mypicId);\r\n                                    this.filesToUpload = [];\r\n                                }                     \r\n            }\r\n            this.showList = 'photosList';\r\n        }\r\n    }\r\n\r\n    async showPhotos (mypic){\r\n        this.selectedphoto = mypic._id;\r\n        await this.photos.getPhotos(mypic._id)\r\n        this.showList ='photosList';\r\n    }\r\n\r\n    back(){\r\n        this.showList='mypicList';\r\n    }\r\n\r\n    backPhotos(){\r\n        this.showList='photosList';\r\n    }\r\n    \r\n      logout(){\r\n        sessionStorage.removeItem('user');\r\n        this.auth.logout();\r\n      }\r\n    }\r\n    \r\n","export function configure(config) {\n  config.globalResources([\n  './value-converters/date-format',\n  './value-converters/completed',\n  './elements/flatpickr'\n]);\n}\n\n","import { inject } from 'aurelia-framework';\r\nimport {HttpClient, json} from 'aurelia-fetch-client';\r\n\r\n@inject(HttpClient)\r\nexport class DataServices {\r\n\r\n\tconstructor(http) {\r\n\t\tthis.httpClient = http;\r\n        this.BASE_URL = \"http://localhost:5000/api/\";\r\n        \r\n\t\tthis.httpClient.configure(config => {\r\n            config\r\n                .withBaseUrl(this.BASE_URL)\r\n                .withDefaults({\r\n                credentials: 'same-origin',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'X-Requested-With': 'Fetch'\r\n                }\r\n                })\r\n                .withInterceptor({\r\n                request(request) {\t\r\n\r\n\t\t\t\t\tvar authHeader = 'Bearer ' + localStorage.getItem('aurelia_token')\r\n\t\t\t\t\trequest.headers.append('Authorization', authHeader);\r\n\t\t\t\t\t\r\n                    console.log(`Requesting ${request.method} ${request.url}`);\r\n                    return request;\r\n                },\r\n                response(response) {\r\n                    console.log(`Received ${response.status} ${response.url}`);\r\n                    return response;\r\n                }\r\n                });\r\n            });\r\n        \r\n\t}\r\n    get(url) {\r\n\t\treturn this.httpClient.fetch(url)\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(data => {\r\n\t\t\t\treturn data;\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\treturn error;\r\n\t\t\t});\r\n\t}\r\n\r\n    post(content, url) {\r\n\t\treturn this.httpClient\r\n\t\t\t.fetch(url, {\r\n\t\t\t\tmethod: 'post',\r\n\t\t\t\tbody: json(content)\r\n\t\t\t})\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(object => {\r\n\t\t\t\treturn object;\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\treturn error;\r\n\t\t\t});\r\n    }\r\n    \r\n    put(content, url) {\r\n\t\treturn this.httpClient\r\n\t\t\t.fetch(url, {\r\n\t\t\t\tmethod: 'put',\r\n\t\t\t\tbody: json(content)\r\n\t\t\t})\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(object => {\r\n\t\t\t\treturn object;\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\treturn error;\r\n\t\t\t});\r\n    }\r\n    \r\n    delete(url) {\r\n\t\treturn this.httpClient\r\n\t\t\t.fetch(url, {\r\n\t\t\t\tmethod: 'delete'\r\n\t\t\t})\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(object => {\r\n\t\t\t\treturn object;\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\treturn error ;\r\n\t\t\t});\r\n\t}\r\n\tuploadFiles(files, url){\r\n            return this.httpClient\r\n            .fetch(url, {\r\n                method: 'post',\r\n                body: files\r\n            })\r\n            .then(response => response.json())\r\n            .then(object => {\r\n                return object;\r\n            })\r\n            .catch(error => {\r\n                return error;\r\n            });\r\n        }\r\n\r\n\r\n}\r\n","import {inject} from 'aurelia-framework';\r\nimport {DataServices} from './data-services';\r\n\r\n@inject(DataServices)\r\nexport class MyPics {\r\n    constructor(data) {\r\n                this.data = data;\r\n                this.MYPIC_SERVICE = 'mypics';\r\n                this.mypicsArray= new Array ();\r\n         }\r\n\r\nasync getUserMypics(id){\r\n    let response = await this.data.get(this.MYPIC_SERVICE + \"/user/\" + id);\r\n    if(!response.error && !response.message){\r\n        this.mypicsArray = response;\r\n    }\r\n} \r\n\r\nasync save(mypic){\r\n    if(mypic){\r\n    if(!mypic._id){\r\n    let serverResponse = await this.data.post(mypic, this.MYPIC_SERVICE);\r\n    if(!serverResponse.error){\r\n        this.mypicsArray.push(serverResponse);\r\n    }\r\n    return serverResponse;\r\n        } else {\r\n                let serverResponse = await this.data.put(mypic, this.MYPIC_SERVICE + \"/\" + mypic._id);\r\n                if(!serverResponse.error){\r\n                    // this.updateArray(response);\r\n    // this.todosArray.forEach(todo => {\r\n    //     if (todo._id === serverResponse._id)\r\n    // })\r\n                }\r\n                return serverResponse;\r\n            }\r\n       }\r\n    \r\n    }\r\n\r\nasync deleteMypic(id){\r\n    let serverResponse = await this.data.delete(this.MYPIC_SERVICE + \"/\" + id);\r\n    if(!serverResponse.error){\r\n        for(let i = 0; i < this.mypicsArray.length; i++){\r\n            if(this.mypicsArray[i]._id === id){\r\n                this.mypicsArray.splice(i,1);\r\n            }\r\n        }\r\n    }\r\n}   \r\n\r\nasync uploadFile(files, userId, mypicId){\r\n            let formData = new FormData();\r\n          files.forEach((item, index) => {\r\n        formData.append(\"file\" + index, item);\r\n            });\r\n        let serverResponse = await this.data.uploadFiles(formData, this.MYPIC_SERVICE +\"/upload/\" + userId + \"/\" + mypicId);\r\n        return serverResponse;\r\n    }\r\n    \r\n\r\n    \r\n}\r\n","import {inject} from 'aurelia-framework';\r\nimport {DataServices} from './data-services';\r\n\r\n@inject(DataServices)\r\nexport class Photos {\r\n    constructor(data) {\r\n                this.data = data;\r\n                this.PHOTO_SERVICE = 'photos';\r\n                this.photoArray= [];\r\n         }\r\n\r\n         async getPhotos(id){\r\n            let response = await this.data.get(this.PHOTO_SERVICE + \"/\" + id);\r\n            if(!response.error && !response.message){\r\n                this.photoArray = response;\r\n            }\r\n        }         \r\n\r\nasync getUserPhoto(id){\r\n    let response = await this.data.get(this.PHOTO_SERVICE + \"/user/\" + id);\r\n    if(!response.error && !response.message){\r\n        this.photoArray = response;\r\n    }\r\n} \r\n\r\nasync save(photo){\r\n    if(photo){\r\n    if(!photo._id){\r\n    let serverResponse = await this.data.post(photo, this.PHOTO_SERVICE);\r\n    if(!serverResponse.error){\r\n        this.photoArray.push(serverResponse);\r\n    }\r\n    return serverResponse;\r\n        } else {\r\n                let serverResponse = await this.data.put(photo, this.PHOTO_SERVICE + \"/\" + photo._id);\r\n                if(!serverResponse.error){\r\n                    // this.updateArray(response);\r\n    // this.todosArray.forEach(todo => {\r\n    //     if (todo._id === serverResponse._id)\r\n    // })\r\n                }\r\n                return serverResponse;\r\n            }\r\n       }\r\n    \r\n    }\r\n\r\nasync deletePhoto(id){\r\n    let serverResponse = await this.data.delete(this.PHOTO_SERVICE + \"/\" + id);\r\n    if(!serverResponse.error){\r\n        for(let i = 0; i < this.photoArray.length; i++){\r\n            if(this.photoArray[i]._id === id){\r\n                this.photoArray.splice(i,1);\r\n            }\r\n        }\r\n    }\r\n}   \r\n\r\nasync uploadFile(files, userId, photoId){\r\n            let formData = new FormData();\r\n          files.forEach((item, index) => {\r\n        formData.append(\"file\" + index, item);\r\n            });\r\n        let serverResponse = await this.data.uploadFiles(formData, this.PHOTO_SERVICE +\"/upload/\" + userId + \"/\" + photoId);\r\n        return serverResponse;\r\n    }\r\n    \r\n\r\n    \r\n}\r\n","import {inject} from 'aurelia-framework';\r\nimport {DataServices} from './data-services';\r\n\r\n@inject(DataServices)\r\nexport class Users {\r\nconstructor(data) {\r\n        this.data = data;\r\n        this.USER_SERVICE = 'users';\r\n    }\r\n\r\nasync save(user){\r\n    if(user){\r\n  let serverResponse = await this.data.post(user, this.USER_SERVICE);\r\n         return serverResponse;\r\n }\r\n}\r\n\r\n}\r\n","import {inject, bindable, bindingMode} from 'aurelia-framework';\r\nimport Flatpickr from 'flatpickr';\r\n\r\n@inject(Element)\r\nexport class FlatPickerCustomElement {\r\n\r\n@bindable({defaultBindingMode: bindingMode.twoWay}) value;\r\n\r\nconstructor(element) {\r\n  this.element = element;\r\n}\r\nbind() {\r\n            const defaultConfig = {\r\n                \taltInput: true,\r\n                \taltFormat: \"F j, Y\",\r\n        wrap: true\r\n            };\r\n            this._config = Object.assign({}, defaultConfig);\r\n            this._config.onChange = this._config.onMonthChange = this._config.onYearChange = this.onChange.bind(this);\r\n        }\r\n        attached() {\r\n                this.flatpickr = new Flatpickr(this.element.querySelector('.aurelia-flatpickr'), this._config);\r\n         }\r\n        onChange(selectedDates, dateStr, instance) {\r\n                this.value = selectedDates[0] \r\n        }\r\n        valueChanged() {\r\n               if (!this.flatpickr) {\r\n                    return;\r\n                }\r\n              if (this.value === this.flatpickr.selectedDates[0]){\r\n                    return;\r\n                }\r\n            let newDate = this.value ? this.value : undefined;      \r\n            this.flatpickr.setDate(newDate);\r\n            }\r\n            }            \r\n","export class CompletedValueConverter {\r\n    \r\n     toView(array, value) {\r\n       if(!value){\r\n        return array.filter(item => {\r\n          return !item.completed;\r\n        })\r\n       } else {\r\n         return array;\r\n       }\r\n     }\r\n    }\r\n","import moment from 'moment';\r\nexport class DateFormatValueConverter {\r\n\r\ntoView(value, format = 'MMM DD YYYY') {\r\nif(value === undefined || value === null){\r\n    return;\r\n            }\r\n    \r\n            return moment(value).format(format);\r\n    }\r\n}\r\n"],"sourceRoot":".."}